- name: shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: installing maven
    ansible.builtin.yum:
      name: maven 
      state: installed

  - name: check roboshop user exists or not 
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true
  
  - name: create user roboshop
    when: output.rc != 0 # if the expression is true then only the module will run
    become: yes
    ansible.builtin.user:
      name: roboshop

  - name: Create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download shipping artifact
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: extract shipping artifact
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: renaming shipping.jar
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: coping shipping.service to  /etc/systemd/system/shipping.service 
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload, enable and start shipping service
    ansible.builtin.systemd:
      daemon_reload: true
  
  - name: installing mysql
    ansible.builtin.yum:
      name: mysql 
      state: installed

  - name: loading schema
    ansible.builtin.shell: mysql -h mysql.sureshdevops.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 

  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true